<?xml version="1.0" encoding="UTF-8"?>
<krpano version="1.22.4">

<!-- ********** -->
<!-- context -->
<!-- id : contextmenu -->
<!-- ********** -->
  <contextmenu fullscreen="false" versioninfo="false" touch="true">
    <item name="author" onclick="getmessage(urltoopen,project_author_url);openurl(get(urltoopen),_blank);" />
    <item name="fullscreenentry" onclick="enterFullscreen();
" separator="true"/>
    <item name="vrmodeentry" onclick="if(scene[get(xml.scene)].full360 AND disableCurrentSceneVrConservation !== true,
    js(accessWebVr(get(xml.scene),get(videoscenestarttime)));
,
    js(accessWebVr(null));
);" />
  </contextmenu>

  <events name="contextmenuevents" keep="true" 
    onenterfullscreen="updateContextMenu" onexitfullscreen="updateContextMenu" 
    onxmlcomplete="updateContextMenu" 
    changetourlanguage="updateContextMenu" 
    />
  <events name="contextmenuvrevents" keep="true" 
    onvravailable="updateContextMenu();" onvrunavailable="updateContextMenu();"
    devices="html5"
    />
  <action name="updateContextMenu">
    getmessage(contextmenu.item[author].caption, project_author_name);
    if (device.fullscreensupport,
      if(tour_fullscreen,
        getmessage(contextmenu.item[fullscreenentry].caption, contextmenucloseFsLabel);
        set(contextmenu.item[fullscreenentry].onclick, exitFullscreen();
);
       ,
        getmessage(contextmenu.item[fullscreenentry].caption, contextmenuopenFsLabel);
        set(contextmenu.item[fullscreenentry].onclick, enterFullscreen();
);
      );
     ,
      set(contextmenu.item[fullscreenentry].visible, false);
    );
    if (device.html5 AND tour_vrdevices,
      getmessage(contextmenu.item[vrmodeentry].caption, contextmenuopenVrLabel);
      set(contextmenu.item[vrmodeentry].onclick, if(scene[get(xml.scene)].full360 AND disableCurrentSceneVrConservation !== true,
    js(accessWebVr(get(xml.scene),get(videoscenestarttime)));
,
    js(accessWebVr(null));
););
     ,
      set(contextmenu.item[vrmodeentry].visible, false);
    );
  </action>

<!-- ********** -->
<!-- localizacao -->
<!-- id : logo2 -->
<!-- ********** -->


  <layer align="bottomright"
         x="-5"
         y="10"
         zorder="2"
         name="logo2"
         keep="true"
         visible="false"
         capture="false"

         url="%FIRSTXML%/graphics/logo2/flr_2.png" 
         onclick="
getmessage(urltoopen,logo2websiteurl);openurl(get(urltoopen),_blank);
"

         height="48"
         width="48"

         />

  <events name="logo2events" 
    onTourStart="showlogo2();"
    keep="true" />

  <action name="hidelogo2">
    set(layer[logo2].visible, false);
  </action>
  <action name="showlogo2">
      set(layer[logo2].visible, true);
  </action>





<!-- ********** -->
<!-- Galeria de Imagens -->
<!-- id : gallery -->
<!-- ********** -->

<ptplugin name="gallery" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="15" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="80" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="80" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="0" type="float" />
		<option name="container_topleft_border_radius" value="3" type="int" />
		<option name="container_topright_border_radius" value="3" type="int" />
		<option name="container_bottomleft_border_radius" value="3" type="int" />
		<option name="container_bottomright_border_radius" value="3" type="int" />
		<option name="container_border_width" value="3" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="0" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.50000762951094835" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="false" type="bool" />
		
		<option name="play_displayed" value="true" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="galleryplay_text" type="string" />




		<option name="navigation_displayed" value="true" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallerynavprev_text" type="string" />
		<option name="navnext_text" value="gallerynavnext_text" type="string" />




		<option name="navigation_arrows" value="true" type="bool" />




		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="galleryfullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="galleryclose_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery')" type="string" />
		<option name="zorder" value="3" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallerypicture_title0" caption="gallerypicture_caption0" value="indexdata/graphics/gallery/"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery">
	set(ptplugin[gallery].jsready, true);
</action>

<action name="showGallery_gallery">
	ifnot(ptplugin[gallery].isOpen,
		if(ptplugin[gallery].doNotDeleteMe,
			set(ptplugin[gallery].currentCall, false);
		set(ptplugin[gallery].isOpen, true);
		set(ptplugin[gallery].doNotDeleteMe, false);
		set(gallery_boxurl, %1);
		pauseautorotation(forceplugin);

		js(invokePluginFunction(gallery, openKolorBox, %1));
		,
			set(ptplugin[gallery].currentCall, true);
			set(ptplugin[gallery].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery(%1););
		);
	,
		if(%1 !== null AND %1 != gallery_boxurl,
			closeKolorBox_gallery();
			delayedcall(0.3,showGallery_gallery(%1););
		);
	);
</action>

<action name="toggleGallery_gallery">
	js(invokePluginFunction(gallery, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery">
	if(ptplugin[gallery].doNotDeleteMe,
		set(ptplugin[gallery].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery">
	resumeautorotation(forceplugin);

	set(ptplugin[gallery].doNotDeleteMe, false);
	set(ptplugin[gallery].isOpen, false);
</action>

<action name="changeLanguage_gallery">
	if(ptplugin[gallery].jsready,
		js(invokePluginFunction(gallery, changeLanguage));
	,
		delayedcall(delay_gallery, 0.1, changeLanguage_gallery(););
	);
</action>

<events name="kolorBoxEvents_gallery" 
	keep="true"
	onremovepano="if(ptplugin[gallery].isOpen,closeKolorBox_gallery(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery].currentCall,if(ptplugin[gallery].isOpen,closeKolorBox_gallery();););"
	changetourlanguage="changeLanguage_gallery();"
	/>

<!-- ********** -->
<!-- Galeria Plantas -->
<!-- id : gallery1 -->
<!-- ********** -->

<ptplugin name="gallery1" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="15" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="true" type="bool" />
		<option name="container_width" value="80" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="80" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="0" type="float" />
		<option name="container_topleft_border_radius" value="3" type="int" />
		<option name="container_topright_border_radius" value="3" type="int" />
		<option name="container_bottomleft_border_radius" value="3" type="int" />
		<option name="container_bottomright_border_radius" value="3" type="int" />
		<option name="container_border_width" value="3" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="0" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.50000762951094835" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="true" type="bool" />
		<option name="title_position" value="top" type="string" />
		<option name="title_font" value="Verdana" type="string" />
		<option name="title_size" value="14" type="int" />
		<option name="title_weight" value="bold" type="string" />
		<option name="title_style" value="normal" type="string" />
		<option name="title_decoration" value="none" type="string" />
		<option name="title_color" value="ffffff" type="string" />
		
		<option name="caption_displayed" value="true" type="bool" />
		<option name="caption_position" value="header" type="string" />
		<option name="caption_font" value="Verdana" type="string" />
		<option name="caption_size" value="14" type="int" />
		<option name="caption_weight" value="normal" type="string" />
		<option name="caption_style" value="normal" type="string" />
		<option name="caption_decoration" value="none" type="string" />
		<option name="caption_color" value="ffffff" type="string" />
		<option name="caption_width" value="200" type="int" />
		<option name="caption_height" value="35" type="int" />
		<option name="caption_textalign" value="center" type="string" />
		
		<option name="play_displayed" value="true" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="gallery1play_text" type="string" />




		<option name="navigation_displayed" value="true" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallery1navprev_text" type="string" />
		<option name="navnext_text" value="gallery1navnext_text" type="string" />




		<option name="navigation_arrows" value="true" type="bool" />




		<option name="fullscreen_displayed" value="false" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="gallery1fullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="gallery1close_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery1')" type="string" />
		<option name="zorder" value="4" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallery1picture_title0" caption="gallery1picture_caption0" value="indexdata/graphics/gallery1/"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery1">
	set(ptplugin[gallery1].jsready, true);
</action>

<action name="showGallery_gallery1">
	ifnot(ptplugin[gallery1].isOpen,
		if(ptplugin[gallery1].doNotDeleteMe,
			set(ptplugin[gallery1].currentCall, false);
		set(ptplugin[gallery1].isOpen, true);
		set(ptplugin[gallery1].doNotDeleteMe, false);
		set(gallery1_boxurl, %1);
		pauseautorotation(forceplugin);

		js(invokePluginFunction(gallery1, openKolorBox, %1));
		,
			set(ptplugin[gallery1].currentCall, true);
			set(ptplugin[gallery1].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery1(%1););
		);
	,
		if(%1 !== null AND %1 != gallery1_boxurl,
			closeKolorBox_gallery1();
			delayedcall(0.3,showGallery_gallery1(%1););
		);
	);
</action>

<action name="toggleGallery_gallery1">
	js(invokePluginFunction(gallery1, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery1">
	if(ptplugin[gallery1].doNotDeleteMe,
		set(ptplugin[gallery1].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery1, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery1">
	resumeautorotation(forceplugin);

	set(ptplugin[gallery1].doNotDeleteMe, false);
	set(ptplugin[gallery1].isOpen, false);
</action>

<action name="changeLanguage_gallery1">
	if(ptplugin[gallery1].jsready,
		js(invokePluginFunction(gallery1, changeLanguage));
	,
		delayedcall(delay_gallery1, 0.1, changeLanguage_gallery1(););
	);
</action>

<events name="kolorBoxEvents_gallery1" 
	keep="true"
	onremovepano="if(ptplugin[gallery1].isOpen,closeKolorBox_gallery1(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery1].currentCall,if(ptplugin[gallery1].isOpen,closeKolorBox_gallery1();););"
	changetourlanguage="changeLanguage_gallery1();"
	/>

<!-- ********** -->
<!-- Implantacao -->
<!-- id : gallery2 -->
<!-- ********** -->

<ptplugin name="gallery2" engine="kolorBox">
	<settings>
		<option name="position" value="center" type="string" />
		<option name="margin_x" value="0" type="int" />
		<option name="margin_y" value="0" type="int" />
		<option name="external_padding" value="15" type="int" />
		<option name="draggable_box" value="false" type="bool" />
		<option name="slideshow_autoplay" value="false" type="bool" />
		<option name="slideshow" value="5000" type="int" />
		<option name="container_auto_size" value="false" type="bool" />
		<option name="container_width" value="80" type="int" />
		<option name="container_width_unit" value="percent" type="string" />
		<option name="container_height" value="80" type="int" />
		<option name="container_height_unit" value="percent" type="string" />
		<option name="container_color" value="ffffff" type="string" />
		<option name="container_alpha" value="0" type="float" />
		<option name="container_topleft_border_radius" value="3" type="int" />
		<option name="container_topright_border_radius" value="3" type="int" />
		<option name="container_bottomleft_border_radius" value="3" type="int" />
		<option name="container_bottomright_border_radius" value="3" type="int" />
		<option name="container_border_width" value="3" type="int" />
		<option name="container_border_color" value="ffffff" type="string" />
		<option name="container_border_alpha" value="0" type="float" />
		<option name="overlay_displayed" value="true" type="bool" />
		<option name="overlay_color" value="000000" type="string" />
		<option name="overlay_alpha" value="0.50000762951094835" type="float" />

		<option name="item_border_width" value="0" type="int" />
		<option name="item_border_color" value="ffffff" type="string" />
		<option name="item_border_alpha" value="1" type="float" />
		
		<option name="title_displayed" value="false" type="bool" />
		
		<option name="caption_displayed" value="false" type="bool" />
		
		<option name="play_displayed" value="false" type="bool" />
		<option name="play_position" value="bottomleft" type="string" />
		<option name="play_text" value="gallery2play_text" type="string" />




		<option name="navigation_displayed" value="false" type="bool" />
		<option name="navigation_position" value="bottom" type="string" />
		<option name="counter_color" value="666666" type="string" />
		<option name="navprev_text" value="gallery2navprev_text" type="string" />
		<option name="navnext_text" value="gallery2navnext_text" type="string" />




		<option name="navigation_arrows" value="false" type="bool" />




		<option name="fullscreen_displayed" value="true" type="bool" />
		<option name="fullscreen_position" value="topleft" type="string" />
		<option name="fullscreen_text" value="gallery2fullscreen_text" type="string" />




		<option name="close_displayed" value="true" type="bool" />
		<option name="close_position" value="topright" type="string" />
		<option name="close_text" value="gallery2close_text" type="string" />

		<option name="close_callback" value="invokeKrFunction('closeKolorBoxCallback_gallery2')" type="string" />
		<option name="zorder" value="5" type="int" />
		<option name="use_i18n" value="true" type="bool" />
	</settings>
	<internaldata>
		<item name="item_1" title="gallery2picture_title0" caption="gallery2picture_caption0" value="indexdata/graphics/gallery2/"/>
	</internaldata>
</ptplugin>

<action name="kolorBoxJsReady_gallery2">
	set(ptplugin[gallery2].jsready, true);
</action>

<action name="showGallery_gallery2">
	ifnot(ptplugin[gallery2].isOpen,
		if(ptplugin[gallery2].doNotDeleteMe,
			set(ptplugin[gallery2].currentCall, false);
		set(ptplugin[gallery2].isOpen, true);
		set(ptplugin[gallery2].doNotDeleteMe, false);
		set(gallery2_boxurl, %1);
		pauseautorotation(forceplugin);

		js(invokePluginFunction(gallery2, openKolorBox, %1));
		,
			set(ptplugin[gallery2].currentCall, true);
			set(ptplugin[gallery2].doNotDeleteMe, true);
			events.dispatch(onremovedisplayedobject);
			delayedcall(0.3,showGallery_gallery2(%1););
		);
	,
		if(%1 !== null AND %1 != gallery2_boxurl,
			closeKolorBox_gallery2();
			delayedcall(0.3,showGallery_gallery2(%1););
		);
	);
</action>

<action name="toggleGallery_gallery2">
	js(invokePluginFunction(gallery2, toggleKolorBox, %1));
</action>


<action name="closeKolorBox_gallery2">
	if(ptplugin[gallery2].doNotDeleteMe,
		set(ptplugin[gallery2].doNotDeleteMe, false);
	,
	js(invokePluginFunction(gallery2, closeKolorBox));
	);
</action>

<action name="closeKolorBoxCallback_gallery2">
	resumeautorotation(forceplugin);

	set(ptplugin[gallery2].doNotDeleteMe, false);
	set(ptplugin[gallery2].isOpen, false);
</action>

<action name="changeLanguage_gallery2">
	if(ptplugin[gallery2].jsready,
		js(invokePluginFunction(gallery2, changeLanguage));
	,
		delayedcall(delay_gallery2, 0.1, changeLanguage_gallery2(););
	);
</action>

<events name="kolorBoxEvents_gallery2" 
	keep="true"
	onremovepano="if(ptplugin[gallery2].isOpen,closeKolorBox_gallery2(););"
	onremovedisplayedobject="ifnot(ptplugin[gallery2].currentCall,if(ptplugin[gallery2].isOpen,closeKolorBox_gallery2();););"
	changetourlanguage="changeLanguage_gallery2();"
	/>

<!-- ********** -->
<!-- Produzido por Pixel -->
<!-- id : title -->
<!-- ********** -->

  <events name="title_events" 
    onTourStart="showtitle();"
    hidetourcontrols="hidetitle();" 
    showtourcontrols="showtitle();" 
    onnewpano="updatetitle();"
    changetourlanguage="changeLanguagetitle"
    keep="true" />

  <action name="hidetitle">set(layer[title].visible, false);</action>
  <action name="showtitle">set(layer[title].visible, true );</action>

  <action name="changeLanguagetitle">
    updatetitle();
  </action>

  <action name="updatetitle">
    getmessage(layer[title].html, get(scene[get(xml.scene)].titleid));
    escape(layer[title].html);
  </action>
  <layer name="title" keep="true" zorder="6"
         type="text"
         align="bottom" x="0" y="0"
         bg="false"
         bgborder="0"
         alpha="0.7000076295109483"
         visible="false"
         capture="false" handcursor="false" enabled="false"
         interactivecontent="false" 
         txtshadow="1.0 1.0 4.0 0x000000 1.0"
         css="text-align:center;
              color:#ffffff;
              font-family:Arial;
              font-weight:bold;
              font-size:14px;"/>
<garrows_settings
	show_floatingarrow_d="true"
	show_chevrons_d="false"
	show_navpoints_d="false"
	show_contextmenu_d="true"
	show_originalhotspots_d="false"

	show_floatingarrow_m="true"
	show_chevrons_m="false"
	show_navpoints_m="false"
	show_contextmenu_m="true"
	show_originalhotspots_m="false"

	show_floatingarrow_vr="true"
	show_chevrons_vr="false"
	show_navpoints_vr="false"
	show_contextmenu_vr="true"
	show_originalhotspots_vr="false"

	floatingarrow_position_d="mouse"
	floatingarrow_position_m="fixed"
	floatingarrow_position_vr="fixed"
	
	floatingarrow_atv="25"
	floatingarrow_alpha="0.5"

	navhotspots_style="_Iconponto"
	navhotspots_style_vertical="IconDefaultPointSpotStyle1"

	startup_delay="0"
	show_tooltips="true"
	ignore_showhidehotspots="false"
	hotkey_f="true"
	chevrons_capture="true"
	chevrons_color="0xffffff"
	chevrons_coloronhover="0xd7d7d7"
	chevrons_borderwidth="1"
	chevrons_zorder="50"
	chevrons_bordercolor="0xffffff"
	chevrons_bordercoloronhover="0xd7d7d7"
	chevrons_style_m="chevronshape"
	chevrons_style_d="chevronshape"
	chevrons_alpha="1"
	chevronsborder_alpha="1"
	floatingarrow_zorder="50"

	keep_view="true"
	keep_view_replace_what="MERGE"
	keep_view_replace_with="KEEPVIEW"

	chevrons_position="25"
	chevrons_scatter="0"
	chevrons_distance="180"
	floatingarrow_flyaway="true"
	floatingarrow_autohide="true"
	floatingarrow_sens="20"
	floatingarrow_updatedelay="1"
	floatingarrow_scale_d="10"
	floatingarrow_scale_m="10"
	navpoints_putonground="true"
	navpoints_atv="25"
	keyboard_control="false"

	plugin_directory="%FIRSTXML%/graphics/garrows"
	scenes_wobbling="false"
	scenes_wobbling_size="5"
	scenes_wobbling_time="500"
	scenes_wobbling_updatedelay="100"
	scenes_wobbling_stopondrag="false"
	chevrons_shadow_color="0x000000"
	chevrons_shadow_bordercolor="0x000000"
	chevrons_shadow_alpha="0.5"
	navpoints_alpha="0.2"
	navpoints_onhover_alpha="0.6"
	chevrons_shadow_borderwidth="1"
	chevrons_shadow_border_alpha="0.5"
	floating_arrow_text="Show/Hide floating arrow"
	chevron_arrows_text="Show/Hide chevron arrows"
	navigation_hotspots_text="Show/Hide navigation hotspots"
	floating_arrow_autohide_text="Auto hide floating arrow"
	hide_on_autorotate="true"
	chevrons_updatedelay_desktop="1"
	chevrons_updatedelay_mobile="0"
	logkey_enable="false"
	disabled_panoids=""
	password_protect="false"
	password="garrows"
/>
<include url="%FIRSTXML%/graphics/garrows/garrows.xml" />



<!--
Plugin: HotspotsVisited
Author: Michael Brüning <M.Bruening@compunics.com.ni
Version 3.2, tested with PTP 2.5.7 on Linux
-->

<events name="Events_HotspotsVisited" keep="true"
	onTourStart="Init_HotspotsVisited();"
	onnewpano="callwhen(ptplugin[floorPlan].jsready, SetVisitedMapspots_HotspotsVisited(););
		SetVisitedHotspots_HotspotsVisited();"
/>

<action name="Init_HotspotsVisited">
</action>

<action name="SetVisitedHotspots_HotspotsVisited">
</action>

<action name="SetVisitedMapspots_HotspotsVisited">
</action>


<!-- ********** -->
<!-- Button img -->
<!-- id : button1 -->
<!-- ********** -->
  <!-- EMPTY BUTTON : no image file -->
<!-- ********** -->
<!-- Button iplanta -->
<!-- id : button2 -->
<!-- ********** -->
  <!-- EMPTY BUTTON : no image file --><plugin name="alpoTM" devices="html5.and.desktop.or.tablet.or.mobile" keep="true" url="%FIRSTXML%/graphics/top.menu-v1.1.6/tm.js" /><action name="alpoTMinit" autorun="preinit" type="Javascript"><![CDATA[ window.alpoTM = { jsonData: '{ "project" : { "build" : "ptp", "plugID" : "alpo_topmenu", "plugDir" : "indexdata/graphics/top.menu-v1.1.6", "addons" : { "scrollarea": "%FIRSTXML%/graphics/scrollarea.js" } }, "structure" : { "categories" : [  { "id" : "cat0", "index" : 0, "icon" : "externo.png", "overIcon" : "", "_groups" : "ba9e00", "_panoIDs" : "panogroup2852", "_krActions" : "" },  { "id" : "cat1", "index" : 1, "icon" : "interno.png", "overIcon" : "", "_groups" : "01188c", "_panoIDs" : "panogroup2851", "_krActions" : "" },  { "id" : "cat2", "index" : 2, "icon" : "play_decorado.png", "overIcon" : "", "_groups" : "8c0019", "_panoIDs" : "panogroup2870", "_krActions" : "" }  ], "panoramas" : [], "groups" : [  { "id" : "panogroup2852", "thumb" : "indexdata/acesso_2828/thumbnail.jpg", "color" : "#ba9e00", "category" : "", "mainPano" : "pano2828", "panoramas" : [ { "id" : "pano2828", "parentID" : "panogroup2852", "thumb" : "indexdata/acesso_2828/thumbnail.jpg" },  { "id" : "pano2829", "parentID" : "panogroup2852", "thumb" : "indexdata/beachtennis_2829/thumbnail.jpg" },  { "id" : "pano2840", "parentID" : "panogroup2852", "thumb" : "indexdata/parque_infantil_2840/thumbnail.jpg" },  { "id" : "pano2841", "parentID" : "panogroup2852", "thumb" : "indexdata/petplay_2841/thumbnail.jpg" },  { "id" : "pano2842", "parentID" : "panogroup2852", "thumb" : "indexdata/piscina01_2842/thumbnail.jpg" },  { "id" : "pano2843", "parentID" : "panogroup2852", "thumb" : "indexdata/piscina02_2843/thumbnail.jpg" },  { "id" : "pano2844", "parentID" : "panogroup2852", "thumb" : "indexdata/playground_2844/thumbnail.jpg" }  ] },  { "id" : "panogroup2851", "thumb" : "indexdata/academia_2827/thumbnail.jpg", "color" : "#01188c", "category" : "", "mainPano" : "pano2827", "panoramas" : [ { "id" : "pano2827", "parentID" : "panogroup2851", "thumb" : "indexdata/academia_2827/thumbnail.jpg" },  { "id" : "pano2830", "parentID" : "panogroup2851", "thumb" : "indexdata/bicicletario_2830/thumbnail.jpg" },  { "id" : "pano2831", "parentID" : "panogroup2851", "thumb" : "indexdata/brinquedoteca_2831/thumbnail.jpg" },  { "id" : "pano2832", "parentID" : "panogroup2851", "thumb" : "indexdata/festas_play_07_festa_2832/thumbnail.jpg" },  { "id" : "pano2833", "parentID" : "panogroup2851", "thumb" : "indexdata/festas_play_07_play__2833/thumbnail.jpg" },  { "id" : "pano2834", "parentID" : "panogroup2851", "thumb" : "indexdata/gabinete_2834/thumbnail.jpg" },  { "id" : "pano2835", "parentID" : "panogroup2851", "thumb" : "indexdata/gourmet_2835/thumbnail.jpg" },  { "id" : "pano2836", "parentID" : "panogroup2851", "thumb" : "indexdata/hall_2836/thumbnail.jpg" },  { "id" : "pano2839", "parentID" : "panogroup2851", "thumb" : "indexdata/market_2839/thumbnail.jpg" },  { "id" : "pano2845", "parentID" : "panogroup2851", "thumb" : "indexdata/pranchario_2845/thumbnail.jpg" },  { "id" : "pano2848", "parentID" : "panogroup2851", "thumb" : "indexdata/sportbar_2848/thumbnail.jpg" }  ] },  { "id" : "panogroup2870", "thumb" : "indexdata/quarto_crianca_2846/thumbnail.jpg", "color" : "#8c0019", "category" : "", "mainPano" : "pano2846", "panoramas" : [ { "id" : "pano2846", "parentID" : "panogroup2870", "thumb" : "indexdata/quarto_crianca_2846/thumbnail.jpg" },  { "id" : "pano2847", "parentID" : "panogroup2870", "thumb" : "indexdata/quarto_solteiro_1302_2847/thumbnail.jpg" },  { "id" : "pano2849", "parentID" : "panogroup2870", "thumb" : "indexdata/suitemaster_1301_2849/thumbnail.jpg" },  { "id" : "pano2850", "parentID" : "panogroup2870", "thumb" : "indexdata/suitemaster_1302_2850/thumbnail.jpg" },  { "id" : "pano2837", "parentID" : "panogroup2870", "thumb" : "indexdata/living_1301_2837/thumbnail.jpg" },  { "id" : "pano2838", "parentID" : "panogroup2870", "thumb" : "indexdata/living_1302_2838/thumbnail.jpg" }  ] }  ] }, "config" : { "startActions" : { "use" : false, "useDt" : true, "delayDt" : 2000, "useTab" : false, "delayTab" : false, "useMob" : false, "delayMob" : false }, "bar" : { "color" : "d9d9d9", "alpha" : "0.60", "zorder": "99", "zindex": "", "width" : "100%", "maxWidth": 0, "minWidth": 0, "height" : 32, "align" : "top", "xOffset" : "0", "yOffset" : "0", "padding" : 10, "usePaddDevice" : false,  "useSizeDevice" : false, "useOffsetDevice" : false   }, "blocks" : { "text" : { "contents" : "projdescr", "contentsDefault": "", "menuFont" : false, "width" : 20, "minWidth" : 0, "maxWidth" : 0, "widthDevices" : false, "widthTab" : 0, "minWidthTab" : 0, "maxWidthTab" : 0, "widthMob" : 0, "minWidthMob" : 0, "maxWidthMob" : 0 }, "categ" : { "hoverscroll" : true, "btnWidth" : 96, "btnHeight" : 14, "categBtnGap" : 0, "useSizeDevice" : false,  "categBtnSizeDiffUse" : false  }, "btns" : { "width" : 4, "sepUse" : false, "sepUrl" : "", "sepH" : 42, "sepX" : 0, "useSizeDevice" : false, "useSepSetDevice" : false   } }, "btns" : { "main" : { "width" : 36, "height" : 36, "x" : 0, "url" : "", "overUrl" : "", "action" : "custom", "devUse" : false  }  }, "menu" : { "pane" : { "width" : 220, "paneMaxHeight" : 220, "topGap" : 11, "triSize" : 0, "paneSetsDevUse" : false, "closePaneOnclick" : true, "groupsFirst" : true, "groupFolding" : false, "screenClickClosePane": true  }, "item" : { "gHeight" : 30, "pHeight" : 30, "gap" : 10, "editMode" : false, "styles" : "", "devUse" : false  } } } } ' }; ]]></action><action name="mainBtnAct">   
   </action>   

<!-- ********** -->
<!-- Logo3 -->
<!-- id : logo3 -->
<!-- ********** -->


  <layer align="topleft"
         x="15"
         y="0"
         zorder="12"
         name="logo3"
         keep="true"
         visible="false"
         capture="false"

         url="%FIRSTXML%/graphics/logo3/logo.png" 
         onclick="
getmessage(urltoopen,logo3websiteurl);openurl(get(urltoopen),_blank);
"

         width="100"
         height="prop"

         />

  <events name="logo3events" 
    onTourStart="showlogo3();"
    keep="true" />

  <action name="hidelogo3">
    set(layer[logo3].visible, false);
  </action>
  <action name="showlogo3">
      set(layer[logo3].visible, true);
  </action>





<!-- ********** -->
<!-- Force Landscape on Mobile -->
<!-- id : ForceLandscapeMobilePlugin -->
<!-- ********** -->

	<events name="mobileorientation_events" devices="mobile" keep="true" onresize="mobileorientation_portrait_mode_check();"/>

	<action name="mobileorientation_portrait_mode_check" device="mobile">
		div(aspect, stagewidth, stageheight);
		if(aspect != lastaspect OR '%1' == 'true',
			copy(lastaspect, aspect);
			if(stagewidth GT stageheight,
				tween(layer[mobileorientation_rotate_device_required].alpha, 0.0, 0.0);
			,
				tween(layer[mobileorientation_rotate_device_required].alpha, 1.0);
				delayedcall(3.0, tween(layer[mobileorientation_rotate_device_required].alpha, 0.0, 1.0););
			);
		);
	</action>	

	<layer name="mobileorientation_rotate_device_required" keep="true" devices="mobile" 
		url="%FIRSTXML%/graphics/rotate_device.png" width="80%" height="prop"
		align="center" edge="center"
		autoalpha="true" alpha="0.0"
		enabled="false"
		/>	

<!-- ********* -->
<!-- Gyroscope -->
<!-- ********* -->


<plugin name="gyroscope"
        url="%FIRSTXML%/graphics/gyro2.js"
        keep="true"
        devices="no-desktop.and.html5"

        onunavailable="checkGyroUnavailable();"
        sensor_mode="1"
        friction="auto"
        autocalibration="true"
        touch_mode="full"
        onavailable="delayedcall(1, checkGyroAvailability(););"
        enabled="false"
        activated="false"
        />

<events name="gyroscopeEvents" onnewpano="planarGyroscopeTest();" keep="true" />

<action name="planarGyroscopeTest">
  if(plugin[gyroscope],
    if(scene[get(xml.scene)].full360,
      set(sceneisfull360, false);
      sub(viewhfov, panoview.hmax, panoview.hmin);
      if (viewhfov == 360,
        sub(viewvfov, panoview.vmax, panoview.vmin);
        if (viewvfov == 180,
          set(sceneisfull360, true);
        );
      );
      if (sceneisfull360,
        set(plugin[gyroscope].camroll, true);
      ,
        set(plugin[gyroscope].camroll, false);
      );
    ,
      set(plugin[gyroscope].camroll, false);
    );
  );
</action>

<action name="changeGyroscopeState">
  if(plugin[gyroscope],
    if (plugin[gyroscope].isavailable,
      if(%1,
        set(plugin[gyroscope].activated,true);
      ,
        set(plugin[gyroscope].activated,false);
      );
      if (%1 != plugin[gyroscope].enabled,
        if(plugin[gyroscope].activated,
          switch(plugin[gyroscope].enabled);
        ,
          set(plugin[gyroscope].enabled, false);
        );
        if (plugin[gyroscope].enabled, events.dispatch(ongyroscopeon);, events.dispatch(ongyroscopeoff););
      );
    );
  );
</action>

<action name="checkGyroAvailability">
  if(plugin[gyroscope],
    if (plugin[gyroscope].isavailable,
      
      set(sceneisfull360, false);
      if (scene[get(xml.scene)].full360,
        sub(viewhfov, panoview.hmax, panoview.hmin);
        if (viewhfov == 360,
          sub(viewvfov, panoview.vmax, panoview.vmin);
          if (viewvfov == 180,
            set(sceneisfull360, true);
          );
        );
      );
      set(delaythegyrocheck, false);
      if (sceneisfull360 AND tour_firstlittleplanet, set(delaythegyrocheck, true));

      ifnot(delaythegyrocheck,
        set(tour_gyroscopedevices, true);
        events.dispatch(ongyroscopeavailable);
      ,
        delayedcall(1, checkGyroAvailability(););
      );
    ,
      set(tour_gyroscopedevices, false);
    );
    if (plugin[gyroscope].enabled, events.dispatch(ongyroscopeon);, events.dispatch(ongyroscopeoff););
  ,
    checkGyroUnavailable();
  );
</action>

<action name="checkGyroUnavailable">
  set(plugin[gyroscope].activated, false);
  set(plugin[gyroscope].enabled, false);
  set(tour_gyroscopedevices, false);
  events.dispatch(ongyroscopeunavailable);
</action>

<!-- ********** -->
<!-- Logo4_unique -->
<!-- id : logo4 -->
<!-- ********** -->


  <layer align="topleft"
         x="130"
         y="0"
         zorder="16"
         name="logo4"
         keep="true"
         visible="false"
         capture="false"

         url="%FIRSTXML%/graphics/logo4/marca-final-lamar-01_.png" 
         onclick="
getmessage(urltoopen,logo4websiteurl);openurl(get(urltoopen),_blank);
"

         width="90"
         height="prop"

         />

  <events name="logo4events" 
    onTourStart="showlogo4();"
    keep="true" />

  <action name="hidelogo4">
    set(layer[logo4].visible, false);
  </action>
  <action name="showlogo4">
      set(layer[logo4].visible, true);
  </action>





<!-- ********** -->
<!-- WebVR Button -->
<!-- id : webvrbutton -->
<!-- ********** -->


	<layer name="webvrbutton"
		keep="true"
		blocked="false"
		alpha="1"
		url="%FIRSTXML%/graphics/webvrbutton/btn_webvr.png"
		align="top"
		x="10"
		y="25"
		zorder="17"
		visible="false"
		onclick="if(scene[get(xml.scene)].full360 AND disableCurrentSceneVrConservation !== true,
    js(accessWebVr(get(xml.scene),get(videoscenestarttime)));
,
    js(accessWebVr(null));
);"

		crop="0|0|100|63"
		/>

	<events name="webvrbuttonevents"
		onvrunavailable="hidewebvrbutton(true);"
		onTourStart="showwebvrbutton();"
		hidetourcontrols="hidewebvrbutton();"
		showtourcontrols="showwebvrbutton();"
		keep="true" />
	<action name="hidewebvrbutton">if(%1 == true,set(layer[webvrbutton].blocked, true););set(layer[webvrbutton].visible, false);</action>
	<action name="showwebvrbutton">if(tour_displaycontrols,if(layer[webvrbutton].blocked == false,set(layer[webvrbutton].visible, true););,hidewebvrbutton(););</action>


  <!-- Fullscreen Management -->
  <action name="exitFullScreen" devices="fullscreensupport">set(tour_fullscreen,false);js(setFullscreen(false));</action>
  <action name="enterFullScreen" devices="fullscreensupport">set(tour_fullscreen,true);js(setFullscreen(true));</action>
  <action name="switchFullScreen">if(tour_fullscreen,exitFullScreen();,enterFullScreen(););</action>

  
  <events name="krpanoExitFullscreenEvent"
    onexitfullscreen="if(tour_fullscreen,exitFullScreenChangeEvent(););"
    keep="true" />

  <action name="exitFullScreenChangeEvent" devices="fullscreensupport">set(tour_fullscreen,false);events.dispatch(onexitfullscreen);</action>
  <action name="enterFullScreenChangeEvent" devices="fullscreensupport">set(tour_fullscreen,true);events.dispatch(onenterfullscreen);</action>
  <action name="exitFullScreenFallback">set(fullscreen,false);</action>
  <action name="enterFullScreenFallback">set(fullscreen,true);</action>
  
  <action name="resizeFullScreenEvent">delayedcall(0,updatescreen(););</action>

  <!-- FLOORPLAN -->
  <action name="hideFloorplan">set(tour_displayfloorplan, false);events.dispatch(onhidetourfloorplan);</action>
  <action name="showFloorplan">set(tour_displayfloorplan, true); events.dispatch(onshowtourfloorplan);</action>


	<!-- WebVR plugin for VR availability tests -->

	<plugin name="ptpvrmode" devices="html5" keep="true"
		url="%FIRSTXML%/graphics/webvr.js"
		mobilevr_support="true"
		mobilevr_fake_support="false"
		vr_cursor=""
		vr_cursor_enabled="false"
		onavailable="delayedcall(1, checkVrAvailability(););"
		onunavailable="checkVrUnavailable();"
		/>
	<action name="checkVrAvailability">
		if(plugin[ptpvrmode],
			if (plugin[ptpvrmode].isavailable,
				set(tour_vrdevices, true);
				events.dispatch(onvravailable);
			,
				set(tour_vrdevices, false);
			);
		,
			checkVrUnavailable();
		);
	</action>
	<action name="checkVrUnavailable">
		set(tour_vrdevices, false);
		events.dispatch(onvrunavailable);
	</action>
</krpano>